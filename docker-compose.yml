services:
  postgres:
    image: postgres:15
    container_name: homestore_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "psql -U ${POSTGRES_USER:-homestore_user} -d homestore_user_db -c 'SELECT 1'"] # Check connection to a specific DB
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s # Allow time for init script to run before checks start
    volumes:
      - homestore_db_data:/var/lib/postgresql/data
      - ./init-multi-db.sh:/docker-entrypoint-initdb.d/init-multi-db.sh

  config-service:
    build: ./config-service
    ports:
      - "8888:8888"
    environment:
      SPRING_PROFILES_ACTIVE: git
      GIT_USERNAME: ${GIT_USERNAME}
      GIT_PASSWORD: ${GIT_PASSWORD}
    restart: always
    volumes:
      - ./HomeStore_config:/config-repo
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8888/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s

  discovery-service:
    build: ./discovery-service
    ports:
      - "8761:8761"
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8761/actuator/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 20s
    depends_on:
      config-service:
        condition: service_healthy
      postgres:
        condition: service_healthy

  user-service:
    build: ./user-service
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      EUREKA_SERVER_URL: http://discovery-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/homestore_user_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8081/actuator/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  product-service:
    build: ./product-service
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      EUREKA_SERVER_URL: http://discovery-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/homestore_product_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8082/actuator/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

  store-service:
    build: ./store-service
    depends_on:
      discovery-service:
        condition: service_healthy
      config-service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_CLOUD_CONFIG_URI: http://config-service:8888
      EUREKA_SERVER_URL: http://discovery-service:8761/eureka
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/homestore_store_db
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "wget --spider -q http://localhost:8083/actuator/health || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  homestore_db_data:
